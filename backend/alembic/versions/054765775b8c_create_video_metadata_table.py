"""create video_metadata table

Revision ID: 054765775b8c
Revises: 
Create Date: 2025-06-11 11:38:55.283173

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '054765775b8c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('video_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('fps', sa.Float(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('codec', sa.String(), nullable=True),
    sa.Column('bitrate', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('total_detections', sa.Integer(), nullable=True),
    sa.Column('total_frames_analyzed', sa.Integer(), nullable=True),
    sa.Column('analysis_summary', sa.Text(), nullable=True),
    sa.Column('is_live_stream', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('requires_retention', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_video_metadata_external_id'), 'video_metadata', ['external_id'], unique=True)
    op.create_index(op.f('ix_video_metadata_id'), 'video_metadata', ['id'], unique=False)
    op.create_table('detections',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('video_id', sa.String(), nullable=True),
    sa.Column('frame_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detections_id'), 'detections', ['id'], unique=False)
    op.create_table('incidents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('incident_type', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('model_used', sa.String(), nullable=True),
    sa.Column('frame_number', sa.Integer(), nullable=True),
    sa.Column('video_id', sa.String(), nullable=True),
    sa.Column('bounding_box_x', sa.Integer(), nullable=True),
    sa.Column('bounding_box_y', sa.Integer(), nullable=True),
    sa.Column('bounding_box_width', sa.Integer(), nullable=True),
    sa.Column('bounding_box_height', sa.Integer(), nullable=True),
    sa.Column('is_false_positive', sa.Boolean(), nullable=True),
    sa.Column('requires_human_review', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_incidents_external_id'), 'incidents', ['external_id'], unique=True)
    op.create_index(op.f('ix_incidents_id'), 'incidents', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_incidents_id'), table_name='incidents')
    op.drop_index(op.f('ix_incidents_external_id'), table_name='incidents')
    op.drop_table('incidents')
    op.drop_index(op.f('ix_detections_id'), table_name='detections')
    op.drop_table('detections')
    op.drop_index(op.f('ix_video_metadata_id'), table_name='video_metadata')
    op.drop_index(op.f('ix_video_metadata_external_id'), table_name='video_metadata')
    op.drop_table('video_metadata')
    # ### end Alembic commands ###
